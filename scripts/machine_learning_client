#!/usr/bin/env python


import sys
import os

import rospy
#import geometry msgs
from geometry_msgs.msg import Vector3, Quaternion, Transform, Point, Pose


# imports the machine_learning service 
from machine_learning.srv import *

#grasp_feasibility_evaluation_client will call the sgrasp_feasibility_evaluation service and return the response
def grasp_feasibility_evaluation_client(grasp):
    rospy.wait_for_service('grasp_feasibility_evaluator')
    try:
         grasp_feasibility_evaluator = rospy.ServiceProxy('grasp_feasibility_evaluator', grasp_feasibility_evaluation)
         # formal style
         resp1 = grasp_feasibility_evaluator.call(grasp_feasibility_evaluationRequest(grasp))
         return resp1.feasibleGrasp
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e


if __name__ == "__main__":
    
    argv = rospy.myargv()
    if len(argv) == 1:

	grasp = Pose(
            position=Point(1.0, 2.0, 3.0),
            orientation=Quaternion(1.0, 0.0, 0.0, 0.0)
        )
   
    print("best grasp is %s "% grasp_feasibility_evaluation_client(grasp))
